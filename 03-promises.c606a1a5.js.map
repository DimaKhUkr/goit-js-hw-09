{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGeC,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAoBC,GAClBA,EAAEC,iBAEF,MAAMC,OAAEA,EAAMC,KAAEA,EAAIC,MAAEA,GAAUJ,EAAEK,cAAcC,SAChD,GAAIJ,EAAOK,OAAS,GAAKJ,EAAKI,MAAQ,GAAKH,EAAMG,MAAQ,EACvD,OAAOC,EAAAb,GAASc,OAAOC,QAAQ,4BAA6B,CAC1DC,QAAS,IACTC,aAAa,EACbC,WAAW,EACXC,SAAU,aACVC,cAAc,EACdC,kBAAmB,WACnBN,QAAS,CACPO,WAAY,UACZC,iBAAkB,aAKxB,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAOK,MAAOY,IAAK,CACrC,MAAMC,EAAeD,EAAIE,OAAOlB,EAAKI,OAASc,OAAOjB,EAAMG,QAK/D,SAAuBO,EAAUV,GAC/B,OAAO,IAAIkB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,E,MAAUV,IAEpBoB,EAAO,C,SAAEV,E,MAAUV,GAAQ,GAE5BA,EAAM,G,EAKXyB,CAlBaV,EAAGC,GAmBbU,MAAK,EAAChB,SAAEA,EAAQV,MAAEA,OAYvB,SAAiBU,EAAUV,GACzBI,EAAAb,GAASc,OAAOsB,QAAQ,uBAAqBjB,QAAeV,M,CAZxD4B,CAAQlB,EAAUV,EAAM,IAEzB6B,OAAM,EAACnB,SAAEA,EAAQV,MAAEA,OAKxB,SAAeU,EAAUV,GACvBI,EAAAb,GAASc,OAAOC,QAAQ,sBAAoBI,QAAiBV,M,CALzD8B,CAAMpB,EAAUV,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', OnBtnClick);\n\nfunction OnBtnClick(e) {\n  e.preventDefault();\n\n  const { amount, step, delay } = e.currentTarget.elements;\n  if (amount.value <= 0 || step.value < 0 || delay.value < 0) {\n    return Notiflix.Notify.failure('Please enter correct data', {\n      timeout: 50000,\n      backOverlay: true,\n      plainText: true,\n      position: 'center-top',\n      clickToClose: true,\n      cssAnimationStyle: 'from-top',\n      failure: {\n        background: '#ff5549',\n        backOverlayColor: '#880808',\n      },\n    });\n  }\n\n  for (let i = 0; i < amount.value; i++) {\n    const delayCounter = i * Number(step.value) + Number(delay.value);\n    runPromise(i, delayCounter);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction runPromise(quantity, delay) {\n  createPromise(quantity, delay)\n    .then(({ position, delay }) => {\n      success(position, delay);\n    })\n    .catch(({ position, delay }) => {\n      error(position, delay);\n    });\n}\n\nfunction error(position, delay) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction success(position, delay) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","e","preventDefault","amount","step","delay","currentTarget","elements","value","$parcel$interopDefault","Notify","failure","timeout","backOverlay","plainText","position","clickToClose","cssAnimationStyle","background","backOverlayColor","i","delayCounter","Number","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","then","success","$47d4ff9957288465$var$success","catch","$47d4ff9957288465$var$error"],"version":3,"file":"03-promises.c606a1a5.js.map"}